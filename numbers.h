#define spriteData  ((unsigned short *) 0x6010000)

#define REG_IME     (*(unsigned short*)0x4000208)
#define REG_IE      (*(unsigned short*)0x4000200)
#define REG_IF      (*(volatile unsigned short*)0x4000202)
#define REG_INT     (*(unsigned int*)0x3007FFC)
#define REG_TM0CNT  (*(unsigned short*)0x4000102)
#define REG_TM0D    (*(unsigned short*)0x4000100)

#define RGB(a,b,c) (a | (b << 5) | (c << 10))

#define P 1
#define Q 2

unsigned short numbers[] = {
    // 0 48
    0,0,P,P,P,P,0,0,
    0,P,P,0,0,0,P,0,
    0,P,P,0,0,P,P,0,
    0,P,P,0,P,0,P,0,
    0,P,P,P,0,0,P,0,
    0,P,P,0,0,0,P,0,
    0,P,P,0,0,0,P,0,
    0,0,P,P,P,P,0,0,
    // 1 49
    0,0,0,0,P,0,0,0,
    0,0,P,P,P,0,0,0,
    0,0,0,P,P,0,0,0,
    0,0,0,P,P,0,0,0,
    0,0,0,P,P,0,0,0,
    0,0,0,P,P,0,0,0,
    0,0,0,P,P,0,0,0,
    0,0,P,P,P,P,0,0,
    // 2 50
    0,0,P,P,P,P,0,0,
    0,P,P,P,P,P,P,0,
    0,P,0,0,0,0,P,0,
    0,0,0,0,0,P,P,0,
    0,0,0,0,P,P,0,0,
    0,0,0,P,P,0,0,0,
    0,0,P,P,0,0,0,0,
    0,P,P,P,P,P,P,0,
    // 3 51
    0,0,P,P,P,P,0,0,
    0,P,P,P,P,P,P,0,
    0,P,0,0,0,0,P,0,
    0,0,0,0,0,0,P,0,
    0,0,0,P,P,P,0,0,
    0,0,0,0,0,0,P,0,
    0,P,0,0,0,0,P,0,
    0,0,P,P,P,P,0,0,
    // 4 52
    0,0,0,0,P,P,0,0,
    0,0,0,P,P,P,0,0,
    0,0,P,P,0,P,0,0,
    0,P,P,0,0,P,0,0,
    0,P,P,P,P,P,0,0,
    0,0,0,0,P,P,0,0,
    0,0,0,0,P,P,0,0,
    0,0,0,0,P,P,0,0,
    // 5 53
    0,P,P,P,P,P,P,0,
    0,P,P,P,P,P,P,0,
    0,P,P,0,0,0,0,0,
    0,P,P,0,0,0,0,0,
    0,0,P,P,P,P,0,0,
    0,0,0,0,0,0,P,0,
    0,P,0,0,0,0,P,0,
    0,0,P,P,P,P,0,0,
    // 6 54
    0,0,0,P,P,P,P,0,
    0,0,P,P,P,P,P,0,
    0,P,P,0,0,0,0,0,
    0,P,P,0,0,0,0,0,
    0,P,P,P,P,P,0,0,
    0,P,P,0,0,0,P,0,
    0,P,P,0,0,0,P,0,
    0,0,P,P,P,P,0,0,
    // 7 55
    0,P,P,P,P,P,P,0,
    0,P,P,P,P,P,P,0,
    0,P,0,0,0,P,P,0,
    0,0,0,0,P,P,0,0,
    0,0,0,0,P,P,0,0,
    0,0,0,P,P,0,0,0,
    0,0,0,P,P,0,0,0,
    0,0,P,P,0,0,0,0,
    // 8 56
    0,0,P,P,P,P,0,0,
    0,P,P,P,P,P,P,0,
    0,P,P,0,0,0,P,0,
    0,0,P,0,0,0,P,0,
    0,0,P,P,P,P,0,0,
    0,P,P,0,0,0,P,0,
    0,P,P,0,0,0,P,0,
    0,0,P,P,P,P,0,0,
    // 9 57
    0,0,P,P,P,P,0,0,
    0,P,P,P,P,P,P,0,
    0,P,P,0,0,0,P,0,
    0,P,P,0,0,0,P,0,
    0,0,P,P,P,P,P,0,
    0,0,0,0,0,P,P,0,
    0,0,0,0,0,P,P,0,
    0,0,0,0,0,P,P,0,
	//10
	0,0,0,0,Q,0,0,0,
    0,0,0,0,Q,Q,0,0,
    Q,Q,Q,Q,Q,Q,Q,0,
    Q,Q,Q,Q,Q,Q,Q,Q,
    Q,Q,Q,Q,Q,Q,Q,Q,
    Q,Q,Q,Q,Q,Q,Q,0,
    0,0,0,0,Q,Q,0,0,
    0,0,0,0,Q,0,0,0,
	//11
	Q,Q,Q,Q,Q,Q,Q,Q,
	Q,Q,Q,Q,Q,Q,Q,Q,
	Q,Q,Q,Q,Q,Q,Q,Q,
	Q,Q,Q,Q,Q,Q,Q,Q,
	Q,Q,Q,Q,Q,Q,Q,Q,
	Q,Q,Q,Q,Q,Q,Q,Q,
	Q,Q,Q,Q,Q,Q,Q,Q,
	Q,Q,Q,Q,Q,Q,Q,Q,
	//12
	Q,Q,Q,0,0,Q,0,0,
	0,0,0,Q,0,0,Q,0,
	0,0,0,Q,0,0,Q,0,
	0,0,0,Q,Q,Q,Q,Q,
	0,0,Q,Q,Q,Q,Q,Q,
	0,Q,Q,Q,0,Q,Q,Q,
	0,Q,Q,0,Q,Q,Q,Q,
	0,Q,Q,Q,0,Q,Q,Q,
	//13
	0,0,0,Q,Q,0,0,0,
	0,0,Q,0,0,0,0,0,
	0,0,Q,0,0,0,0,0,
	Q,Q,Q,Q,0,0,0,0,
	Q,Q,Q,Q,Q,Q,0,0,
	0,0,Q,Q,Q,0,Q,0,
	0,0,0,Q,Q,0,0,Q,
	Q,Q,Q,Q,Q,Q,0,0,
	//14
	0,Q,Q,Q,0,Q,Q,Q,
	0,Q,Q,0,Q,Q,Q,Q,
	0,Q,Q,Q,0,Q,Q,Q,
	0,0,Q,Q,Q,Q,Q,Q,
	0,0,0,Q,Q,Q,Q,Q,
	0,0,0,Q,0,0,Q,0,
	0,0,0,Q,0,0,Q,0,
	Q,Q,Q,0,0,Q,0,0,
	//15
	Q,Q,Q,Q,Q,Q,0,0,
	0,0,Q,Q,Q,0,0,Q,
	0,0,0,Q,Q,0,Q,0,
	Q,Q,Q,Q,Q,Q,0,0,
	Q,Q,Q,Q,0,0,0,0,
	0,0,Q,0,0,0,0,0,
	0,0,Q,0,0,0,0,0,
	0,0,0,Q,Q,0,0,0,
};
